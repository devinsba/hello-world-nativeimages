language: java
jdk:
  - openjdk8

cache:
  directories:
    - "$HOME/.m2"

services:
  - docker

before_install:
  - docker pull oracle/graalvm-ce:1.0.0-rc16
  - docker pull frolvlad/alpine-glibc

jobs:
  include:
#    - stage: build
#      name: "akkahttp"
#      script:
#        - cd akkahttp
#        - mvn -U clean install
#        - docker run -d --name=akkahttp -p 8080:8080 -v `pwd`:/build oracle/graalvm-ce:1.0.0-rc16 java -agentlib:native-image-agent=config-output-dir=/build/native-config -jar /build/target/hello-world.jar
#        - curl http://localhost:8080
#        - docker stop akkahttp
#        - docker rm akkahttp
    - stage: build
      name: "armeria"
      script:
        - cd armeria
        - mvn -U clean install
        - docker run -d --name=armeria -p 8080:8080 -v `pwd`:/build oracle/graalvm-ce:1.0.0-rc16 java -agentlib:native-image-agent=config-output-dir=/build/target/native-config -jar /build/target/hello-world.jar
        - sleep 5s && curl http://localhost:8080
        - docker stop armeria
        - docker rm armeria
        - docker run -v `pwd`:/build oracle/graalvm-ce:1.0.0-rc16 native-image --no-fallback --no-server --class-path /build/target/hello-world.jar --configurations-path /build/target/native-config -H:EnableURLProtocols=http -H:Name=/build/target/hello-world -H:Class=com.briandevins.nativeimages.HelloWorld -H:-UseServiceLoaderFeature --delay-class-initialization-to-runtime=com.linecorp.armeria.common.CommonPools,com.linecorp.armeria.internal.PathAndQuery,com.linecorp.armeria.server.RouteCache
        - docker build . -t devinsba/hello-world-nativeimages:armeria
        - docker run -d --name=armeria -p 8080:8080 devinsba/hello-world-nativeimages:armeria
        - sleep 5s && curl http://localhost:8080
        - docker stop armeria
      after_failure:
        - docker logs armeria
#    - stage: build
#      name: "dropwizard"
#      script:
#        - cd dropwizard
#        - mvn -U clean install
#    - stage: build
#      name: "sparkjava"
#      script:
#        - cd sparkjava
#        - mvn -U clean install
#    - stage: build
#      name: "undertow"
#      script:
#        - cd undertow
#        - mvn -U clean install
#    - stage: build
#      name: "webflux"
#      script:
#        - cd webflux
#        - mvn -U clean install
